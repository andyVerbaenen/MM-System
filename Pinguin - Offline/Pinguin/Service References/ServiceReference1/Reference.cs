//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace Pinguin.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOSpeler", Namespace="http://schemas.datacontract.org/2004/07/Pinguin.Web.DTO")]
    public partial class DTOSpeler : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GelijkField;
        
        private int GewonnenField;
        
        private int IDField;
        
        private string IsReadyField;
        
        private int LobbyIDField;
        
        private string NickNameField;
        
        private int PuntenField;
        
        private int VerlorenField;
        
        private string WachtwoordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gelijk {
            get {
                return this.GelijkField;
            }
            set {
                if ((this.GelijkField.Equals(value) != true)) {
                    this.GelijkField = value;
                    this.RaisePropertyChanged("Gelijk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gewonnen {
            get {
                return this.GewonnenField;
            }
            set {
                if ((this.GewonnenField.Equals(value) != true)) {
                    this.GewonnenField = value;
                    this.RaisePropertyChanged("Gewonnen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsReady {
            get {
                return this.IsReadyField;
            }
            set {
                if ((object.ReferenceEquals(this.IsReadyField, value) != true)) {
                    this.IsReadyField = value;
                    this.RaisePropertyChanged("IsReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LobbyID {
            get {
                return this.LobbyIDField;
            }
            set {
                if ((this.LobbyIDField.Equals(value) != true)) {
                    this.LobbyIDField = value;
                    this.RaisePropertyChanged("LobbyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Punten {
            get {
                return this.PuntenField;
            }
            set {
                if ((this.PuntenField.Equals(value) != true)) {
                    this.PuntenField = value;
                    this.RaisePropertyChanged("Punten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Verloren {
            get {
                return this.VerlorenField;
            }
            set {
                if ((this.VerlorenField.Equals(value) != true)) {
                    this.VerlorenField = value;
                    this.RaisePropertyChanged("Verloren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wachtwoord {
            get {
                return this.WachtwoordField;
            }
            set {
                if ((object.ReferenceEquals(this.WachtwoordField, value) != true)) {
                    this.WachtwoordField = value;
                    this.RaisePropertyChanged("Wachtwoord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPinguinService")]
    public interface IPinguinService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/DoWork", ReplyAction="http://tempuri.org/IPinguinService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/GetAllSpelers", ReplyAction="http://tempuri.org/IPinguinService/GetAllSpelersResponse")]
        System.IAsyncResult BeginGetAllSpelers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> EndGetAllSpelers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/RolDobbelsteen", ReplyAction="http://tempuri.org/IPinguinService/RolDobbelsteenResponse")]
        System.IAsyncResult BeginRolDobbelsteen(System.AsyncCallback callback, object asyncState);
        
        int EndRolDobbelsteen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/MakeMap", ReplyAction="http://tempuri.org/IPinguinService/MakeMapResponse")]
        System.IAsyncResult BeginMakeMap(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> EndMakeMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/MakeGrid", ReplyAction="http://tempuri.org/IPinguinService/MakeGridResponse")]
        System.IAsyncResult BeginMakeGrid(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndMakeGrid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/OpzetFase", ReplyAction="http://tempuri.org/IPinguinService/OpzetFaseResponse")]
        System.IAsyncResult BeginOpzetFase(System.AsyncCallback callback, object asyncState);
        
        bool EndOpzetFase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/ChanceOpzetFase", ReplyAction="http://tempuri.org/IPinguinService/ChanceOpzetFaseResponse")]
        System.IAsyncResult BeginChanceOpzetFase(System.AsyncCallback callback, object asyncState);
        
        bool EndChanceOpzetFase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPinguinService/SetOpzetFase", ReplyAction="http://tempuri.org/IPinguinService/SetOpzetFaseResponse")]
        System.IAsyncResult BeginSetOpzetFase(System.AsyncCallback callback, object asyncState);
        
        bool EndSetOpzetFase(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPinguinServiceChannel : Pinguin.ServiceReference1.IPinguinService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSpelersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSpelersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolDobbelsteenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RolDobbelsteenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakeMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakeMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakeGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakeGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpzetFaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpzetFaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChanceOpzetFaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChanceOpzetFaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetOpzetFaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetOpzetFaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PinguinServiceClient : System.ServiceModel.ClientBase<Pinguin.ServiceReference1.IPinguinService>, Pinguin.ServiceReference1.IPinguinService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSpelersDelegate;
        
        private EndOperationDelegate onEndGetAllSpelersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSpelersCompletedDelegate;
        
        private BeginOperationDelegate onBeginRolDobbelsteenDelegate;
        
        private EndOperationDelegate onEndRolDobbelsteenDelegate;
        
        private System.Threading.SendOrPostCallback onRolDobbelsteenCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakeMapDelegate;
        
        private EndOperationDelegate onEndMakeMapDelegate;
        
        private System.Threading.SendOrPostCallback onMakeMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakeGridDelegate;
        
        private EndOperationDelegate onEndMakeGridDelegate;
        
        private System.Threading.SendOrPostCallback onMakeGridCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpzetFaseDelegate;
        
        private EndOperationDelegate onEndOpzetFaseDelegate;
        
        private System.Threading.SendOrPostCallback onOpzetFaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginChanceOpzetFaseDelegate;
        
        private EndOperationDelegate onEndChanceOpzetFaseDelegate;
        
        private System.Threading.SendOrPostCallback onChanceOpzetFaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOpzetFaseDelegate;
        
        private EndOperationDelegate onEndSetOpzetFaseDelegate;
        
        private System.Threading.SendOrPostCallback onSetOpzetFaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PinguinServiceClient() {
        }
        
        public PinguinServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PinguinServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PinguinServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PinguinServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetAllSpelersCompletedEventArgs> GetAllSpelersCompleted;
        
        public event System.EventHandler<RolDobbelsteenCompletedEventArgs> RolDobbelsteenCompleted;
        
        public event System.EventHandler<MakeMapCompletedEventArgs> MakeMapCompleted;
        
        public event System.EventHandler<MakeGridCompletedEventArgs> MakeGridCompleted;
        
        public event System.EventHandler<OpzetFaseCompletedEventArgs> OpzetFaseCompleted;
        
        public event System.EventHandler<ChanceOpzetFaseCompletedEventArgs> ChanceOpzetFaseCompleted;
        
        public event System.EventHandler<SetOpzetFaseCompletedEventArgs> SetOpzetFaseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pinguin.ServiceReference1.IPinguinService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((Pinguin.ServiceReference1.IPinguinService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginGetAllSpelers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSpelers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> Pinguin.ServiceReference1.IPinguinService.EndGetAllSpelers(System.IAsyncResult result) {
            return base.Channel.EndGetAllSpelers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSpelers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginGetAllSpelers(callback, asyncState);
        }
        
        private object[] OnEndGetAllSpelers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndGetAllSpelers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSpelersCompleted(object state) {
            if ((this.GetAllSpelersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSpelersCompleted(this, new GetAllSpelersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSpelersAsync() {
            this.GetAllSpelersAsync(null);
        }
        
        public void GetAllSpelersAsync(object userState) {
            if ((this.onBeginGetAllSpelersDelegate == null)) {
                this.onBeginGetAllSpelersDelegate = new BeginOperationDelegate(this.OnBeginGetAllSpelers);
            }
            if ((this.onEndGetAllSpelersDelegate == null)) {
                this.onEndGetAllSpelersDelegate = new EndOperationDelegate(this.OnEndGetAllSpelers);
            }
            if ((this.onGetAllSpelersCompletedDelegate == null)) {
                this.onGetAllSpelersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSpelersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSpelersDelegate, null, this.onEndGetAllSpelersDelegate, this.onGetAllSpelersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginRolDobbelsteen(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRolDobbelsteen(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Pinguin.ServiceReference1.IPinguinService.EndRolDobbelsteen(System.IAsyncResult result) {
            return base.Channel.EndRolDobbelsteen(result);
        }
        
        private System.IAsyncResult OnBeginRolDobbelsteen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginRolDobbelsteen(callback, asyncState);
        }
        
        private object[] OnEndRolDobbelsteen(System.IAsyncResult result) {
            int retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndRolDobbelsteen(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRolDobbelsteenCompleted(object state) {
            if ((this.RolDobbelsteenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RolDobbelsteenCompleted(this, new RolDobbelsteenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RolDobbelsteenAsync() {
            this.RolDobbelsteenAsync(null);
        }
        
        public void RolDobbelsteenAsync(object userState) {
            if ((this.onBeginRolDobbelsteenDelegate == null)) {
                this.onBeginRolDobbelsteenDelegate = new BeginOperationDelegate(this.OnBeginRolDobbelsteen);
            }
            if ((this.onEndRolDobbelsteenDelegate == null)) {
                this.onEndRolDobbelsteenDelegate = new EndOperationDelegate(this.OnEndRolDobbelsteen);
            }
            if ((this.onRolDobbelsteenCompletedDelegate == null)) {
                this.onRolDobbelsteenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRolDobbelsteenCompleted);
            }
            base.InvokeAsync(this.onBeginRolDobbelsteenDelegate, null, this.onEndRolDobbelsteenDelegate, this.onRolDobbelsteenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginMakeMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> Pinguin.ServiceReference1.IPinguinService.EndMakeMap(System.IAsyncResult result) {
            return base.Channel.EndMakeMap(result);
        }
        
        private System.IAsyncResult OnBeginMakeMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginMakeMap(callback, asyncState);
        }
        
        private object[] OnEndMakeMap(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndMakeMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMakeMapCompleted(object state) {
            if ((this.MakeMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeMapCompleted(this, new MakeMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeMapAsync() {
            this.MakeMapAsync(null);
        }
        
        public void MakeMapAsync(object userState) {
            if ((this.onBeginMakeMapDelegate == null)) {
                this.onBeginMakeMapDelegate = new BeginOperationDelegate(this.OnBeginMakeMap);
            }
            if ((this.onEndMakeMapDelegate == null)) {
                this.onEndMakeMapDelegate = new EndOperationDelegate(this.OnEndMakeMap);
            }
            if ((this.onMakeMapCompletedDelegate == null)) {
                this.onMakeMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeMapCompleted);
            }
            base.InvokeAsync(this.onBeginMakeMapDelegate, null, this.onEndMakeMapDelegate, this.onMakeMapCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginMakeGrid(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeGrid(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> Pinguin.ServiceReference1.IPinguinService.EndMakeGrid(System.IAsyncResult result) {
            return base.Channel.EndMakeGrid(result);
        }
        
        private System.IAsyncResult OnBeginMakeGrid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginMakeGrid(callback, asyncState);
        }
        
        private object[] OnEndMakeGrid(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndMakeGrid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMakeGridCompleted(object state) {
            if ((this.MakeGridCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeGridCompleted(this, new MakeGridCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeGridAsync() {
            this.MakeGridAsync(null);
        }
        
        public void MakeGridAsync(object userState) {
            if ((this.onBeginMakeGridDelegate == null)) {
                this.onBeginMakeGridDelegate = new BeginOperationDelegate(this.OnBeginMakeGrid);
            }
            if ((this.onEndMakeGridDelegate == null)) {
                this.onEndMakeGridDelegate = new EndOperationDelegate(this.OnEndMakeGrid);
            }
            if ((this.onMakeGridCompletedDelegate == null)) {
                this.onMakeGridCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeGridCompleted);
            }
            base.InvokeAsync(this.onBeginMakeGridDelegate, null, this.onEndMakeGridDelegate, this.onMakeGridCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginOpzetFase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpzetFase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Pinguin.ServiceReference1.IPinguinService.EndOpzetFase(System.IAsyncResult result) {
            return base.Channel.EndOpzetFase(result);
        }
        
        private System.IAsyncResult OnBeginOpzetFase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginOpzetFase(callback, asyncState);
        }
        
        private object[] OnEndOpzetFase(System.IAsyncResult result) {
            bool retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndOpzetFase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpzetFaseCompleted(object state) {
            if ((this.OpzetFaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpzetFaseCompleted(this, new OpzetFaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpzetFaseAsync() {
            this.OpzetFaseAsync(null);
        }
        
        public void OpzetFaseAsync(object userState) {
            if ((this.onBeginOpzetFaseDelegate == null)) {
                this.onBeginOpzetFaseDelegate = new BeginOperationDelegate(this.OnBeginOpzetFase);
            }
            if ((this.onEndOpzetFaseDelegate == null)) {
                this.onEndOpzetFaseDelegate = new EndOperationDelegate(this.OnEndOpzetFase);
            }
            if ((this.onOpzetFaseCompletedDelegate == null)) {
                this.onOpzetFaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpzetFaseCompleted);
            }
            base.InvokeAsync(this.onBeginOpzetFaseDelegate, null, this.onEndOpzetFaseDelegate, this.onOpzetFaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginChanceOpzetFase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChanceOpzetFase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Pinguin.ServiceReference1.IPinguinService.EndChanceOpzetFase(System.IAsyncResult result) {
            return base.Channel.EndChanceOpzetFase(result);
        }
        
        private System.IAsyncResult OnBeginChanceOpzetFase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginChanceOpzetFase(callback, asyncState);
        }
        
        private object[] OnEndChanceOpzetFase(System.IAsyncResult result) {
            bool retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndChanceOpzetFase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChanceOpzetFaseCompleted(object state) {
            if ((this.ChanceOpzetFaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChanceOpzetFaseCompleted(this, new ChanceOpzetFaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChanceOpzetFaseAsync() {
            this.ChanceOpzetFaseAsync(null);
        }
        
        public void ChanceOpzetFaseAsync(object userState) {
            if ((this.onBeginChanceOpzetFaseDelegate == null)) {
                this.onBeginChanceOpzetFaseDelegate = new BeginOperationDelegate(this.OnBeginChanceOpzetFase);
            }
            if ((this.onEndChanceOpzetFaseDelegate == null)) {
                this.onEndChanceOpzetFaseDelegate = new EndOperationDelegate(this.OnEndChanceOpzetFase);
            }
            if ((this.onChanceOpzetFaseCompletedDelegate == null)) {
                this.onChanceOpzetFaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChanceOpzetFaseCompleted);
            }
            base.InvokeAsync(this.onBeginChanceOpzetFaseDelegate, null, this.onEndChanceOpzetFaseDelegate, this.onChanceOpzetFaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pinguin.ServiceReference1.IPinguinService.BeginSetOpzetFase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOpzetFase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Pinguin.ServiceReference1.IPinguinService.EndSetOpzetFase(System.IAsyncResult result) {
            return base.Channel.EndSetOpzetFase(result);
        }
        
        private System.IAsyncResult OnBeginSetOpzetFase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Pinguin.ServiceReference1.IPinguinService)(this)).BeginSetOpzetFase(callback, asyncState);
        }
        
        private object[] OnEndSetOpzetFase(System.IAsyncResult result) {
            bool retVal = ((Pinguin.ServiceReference1.IPinguinService)(this)).EndSetOpzetFase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetOpzetFaseCompleted(object state) {
            if ((this.SetOpzetFaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOpzetFaseCompleted(this, new SetOpzetFaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOpzetFaseAsync() {
            this.SetOpzetFaseAsync(null);
        }
        
        public void SetOpzetFaseAsync(object userState) {
            if ((this.onBeginSetOpzetFaseDelegate == null)) {
                this.onBeginSetOpzetFaseDelegate = new BeginOperationDelegate(this.OnBeginSetOpzetFase);
            }
            if ((this.onEndSetOpzetFaseDelegate == null)) {
                this.onEndSetOpzetFaseDelegate = new EndOperationDelegate(this.OnEndSetOpzetFase);
            }
            if ((this.onSetOpzetFaseCompletedDelegate == null)) {
                this.onSetOpzetFaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOpzetFaseCompleted);
            }
            base.InvokeAsync(this.onBeginSetOpzetFaseDelegate, null, this.onEndSetOpzetFaseDelegate, this.onSetOpzetFaseCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Pinguin.ServiceReference1.IPinguinService CreateChannel() {
            return new PinguinServiceClientChannel(this);
        }
        
        private class PinguinServiceClientChannel : ChannelBase<Pinguin.ServiceReference1.IPinguinService>, Pinguin.ServiceReference1.IPinguinService {
            
            public PinguinServiceClientChannel(System.ServiceModel.ClientBase<Pinguin.ServiceReference1.IPinguinService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllSpelers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllSpelers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> EndGetAllSpelers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler> _result = ((System.Collections.ObjectModel.ObservableCollection<Pinguin.ServiceReference1.DTOSpeler>)(base.EndInvoke("GetAllSpelers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRolDobbelsteen(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RolDobbelsteen", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRolDobbelsteen(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RolDobbelsteen", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMakeMap(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("MakeMap", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> EndMakeMap(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<int>>)(base.EndInvoke("MakeMap", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMakeGrid(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("MakeGrid", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndMakeGrid(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("MakeGrid", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOpzetFase(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("OpzetFase", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndOpzetFase(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("OpzetFase", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChanceOpzetFase(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ChanceOpzetFase", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChanceOpzetFase(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChanceOpzetFase", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetOpzetFase(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SetOpzetFase", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetOpzetFase(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetOpzetFase", _args, result)));
                return _result;
            }
        }
    }
}
