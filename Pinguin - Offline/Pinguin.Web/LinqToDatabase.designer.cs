#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pinguin.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PinguinDatabase")]
	public partial class LinqToDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIjsschot(Ijsschot instance);
    partial void UpdateIjsschot(Ijsschot instance);
    partial void DeleteIjsschot(Ijsschot instance);
    partial void InsertLobby(Lobby instance);
    partial void UpdateLobby(Lobby instance);
    partial void DeleteLobby(Lobby instance);
    partial void InsertPion(Pion instance);
    partial void UpdatePion(Pion instance);
    partial void DeletePion(Pion instance);
    partial void InsertSpeler(Speler instance);
    partial void UpdateSpeler(Speler instance);
    partial void DeleteSpeler(Speler instance);
    #endregion
		
		public LinqToDatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PinguinDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ijsschot> Ijsschots
		{
			get
			{
				return this.GetTable<Ijsschot>();
			}
		}
		
		public System.Data.Linq.Table<Lobby> Lobbies
		{
			get
			{
				return this.GetTable<Lobby>();
			}
		}
		
		public System.Data.Linq.Table<Pion> Pions
		{
			get
			{
				return this.GetTable<Pion>();
			}
		}
		
		public System.Data.Linq.Table<Speler> Spelers
		{
			get
			{
				return this.GetTable<Speler>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ijsschots")]
	public partial class Ijsschot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Column;
		
		private int _Row;
		
		private string _Visibility;
		
		private int _AantalVissen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColumnChanging(int value);
    partial void OnColumnChanged();
    partial void OnRowChanging(int value);
    partial void OnRowChanged();
    partial void OnVisibilityChanging(string value);
    partial void OnVisibilityChanged();
    partial void OnAantalVissenChanging(int value);
    partial void OnAantalVissenChanged();
    #endregion
		
		public Ijsschot()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column]", Storage="_Column", DbType="Int NOT NULL")]
		public int Column
		{
			get
			{
				return this._Column;
			}
			set
			{
				if ((this._Column != value))
				{
					this.OnColumnChanging(value);
					this.SendPropertyChanging();
					this._Column = value;
					this.SendPropertyChanged("Column");
					this.OnColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="Int NOT NULL")]
		public int Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AantalVissen", DbType="Int NOT NULL")]
		public int AantalVissen
		{
			get
			{
				return this._AantalVissen;
			}
			set
			{
				if ((this._AantalVissen != value))
				{
					this.OnAantalVissenChanging(value);
					this.SendPropertyChanging();
					this._AantalVissen = value;
					this.SendPropertyChanged("AantalVissen");
					this.OnAantalVissenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lobby")]
	public partial class Lobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tijd;
		
		private int _MapColumns;
		
		private int _MapRows;
		
		private string _Status;
		
		private string _Vorm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTijdChanging(string value);
    partial void OnTijdChanged();
    partial void OnMapColumnsChanging(int value);
    partial void OnMapColumnsChanged();
    partial void OnMapRowsChanging(int value);
    partial void OnMapRowsChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnVormChanging(string value);
    partial void OnVormChanged();
    #endregion
		
		public Lobby()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tijd", DbType="VarChar(10)")]
		public string Tijd
		{
			get
			{
				return this._Tijd;
			}
			set
			{
				if ((this._Tijd != value))
				{
					this.OnTijdChanging(value);
					this.SendPropertyChanging();
					this._Tijd = value;
					this.SendPropertyChanged("Tijd");
					this.OnTijdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapColumns", DbType="Int NOT NULL")]
		public int MapColumns
		{
			get
			{
				return this._MapColumns;
			}
			set
			{
				if ((this._MapColumns != value))
				{
					this.OnMapColumnsChanging(value);
					this.SendPropertyChanging();
					this._MapColumns = value;
					this.SendPropertyChanged("MapColumns");
					this.OnMapColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRows", DbType="Int NOT NULL")]
		public int MapRows
		{
			get
			{
				return this._MapRows;
			}
			set
			{
				if ((this._MapRows != value))
				{
					this.OnMapRowsChanging(value);
					this.SendPropertyChanging();
					this._MapRows = value;
					this.SendPropertyChanged("MapRows");
					this.OnMapRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorm", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Vorm
		{
			get
			{
				return this._Vorm;
			}
			set
			{
				if ((this._Vorm != value))
				{
					this.OnVormChanging(value);
					this.SendPropertyChanging();
					this._Vorm = value;
					this.SendPropertyChanged("Vorm");
					this.OnVormChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pion")]
	public partial class Pion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Column;
		
		private int _Row;
		
		private int _Speler;
		
		private int _Ijsschots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColumnChanging(int value);
    partial void OnColumnChanged();
    partial void OnRowChanging(int value);
    partial void OnRowChanged();
    partial void OnSpelerChanging(int value);
    partial void OnSpelerChanged();
    partial void OnIjsschotsChanging(int value);
    partial void OnIjsschotsChanged();
    #endregion
		
		public Pion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column]", Storage="_Column", DbType="Int NOT NULL")]
		public int Column
		{
			get
			{
				return this._Column;
			}
			set
			{
				if ((this._Column != value))
				{
					this.OnColumnChanging(value);
					this.SendPropertyChanging();
					this._Column = value;
					this.SendPropertyChanged("Column");
					this.OnColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="Int NOT NULL")]
		public int Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speler", DbType="Int NOT NULL")]
		public int Speler
		{
			get
			{
				return this._Speler;
			}
			set
			{
				if ((this._Speler != value))
				{
					this.OnSpelerChanging(value);
					this.SendPropertyChanging();
					this._Speler = value;
					this.SendPropertyChanged("Speler");
					this.OnSpelerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ijsschots", DbType="Int NOT NULL")]
		public int Ijsschots
		{
			get
			{
				return this._Ijsschots;
			}
			set
			{
				if ((this._Ijsschots != value))
				{
					this.OnIjsschotsChanging(value);
					this.SendPropertyChanging();
					this._Ijsschots = value;
					this.SendPropertyChanged("Ijsschots");
					this.OnIjsschotsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speler")]
	public partial class Speler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NickName;
		
		private string _Wachtwoord;
		
		private System.Nullable<int> _Gewonnen;
		
		private System.Nullable<int> _Gelijk;
		
		private System.Nullable<int> _Verloren;
		
		private int _Lobby;
		
		private System.Nullable<int> _Punten;
		
		private string _Ready;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnWachtwoordChanging(string value);
    partial void OnWachtwoordChanged();
    partial void OnGewonnenChanging(System.Nullable<int> value);
    partial void OnGewonnenChanged();
    partial void OnGelijkChanging(System.Nullable<int> value);
    partial void OnGelijkChanged();
    partial void OnVerlorenChanging(System.Nullable<int> value);
    partial void OnVerlorenChanged();
    partial void OnLobbyChanging(int value);
    partial void OnLobbyChanged();
    partial void OnPuntenChanging(System.Nullable<int> value);
    partial void OnPuntenChanged();
    partial void OnReadyChanging(string value);
    partial void OnReadyChanged();
    #endregion
		
		public Speler()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wachtwoord", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Wachtwoord
		{
			get
			{
				return this._Wachtwoord;
			}
			set
			{
				if ((this._Wachtwoord != value))
				{
					this.OnWachtwoordChanging(value);
					this.SendPropertyChanging();
					this._Wachtwoord = value;
					this.SendPropertyChanged("Wachtwoord");
					this.OnWachtwoordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewonnen", DbType="Int")]
		public System.Nullable<int> Gewonnen
		{
			get
			{
				return this._Gewonnen;
			}
			set
			{
				if ((this._Gewonnen != value))
				{
					this.OnGewonnenChanging(value);
					this.SendPropertyChanging();
					this._Gewonnen = value;
					this.SendPropertyChanged("Gewonnen");
					this.OnGewonnenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gelijk", DbType="Int")]
		public System.Nullable<int> Gelijk
		{
			get
			{
				return this._Gelijk;
			}
			set
			{
				if ((this._Gelijk != value))
				{
					this.OnGelijkChanging(value);
					this.SendPropertyChanging();
					this._Gelijk = value;
					this.SendPropertyChanged("Gelijk");
					this.OnGelijkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verloren", DbType="Int")]
		public System.Nullable<int> Verloren
		{
			get
			{
				return this._Verloren;
			}
			set
			{
				if ((this._Verloren != value))
				{
					this.OnVerlorenChanging(value);
					this.SendPropertyChanging();
					this._Verloren = value;
					this.SendPropertyChanged("Verloren");
					this.OnVerlorenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lobby", DbType="Int NOT NULL")]
		public int Lobby
		{
			get
			{
				return this._Lobby;
			}
			set
			{
				if ((this._Lobby != value))
				{
					this.OnLobbyChanging(value);
					this.SendPropertyChanging();
					this._Lobby = value;
					this.SendPropertyChanged("Lobby");
					this.OnLobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Punten", DbType="Int")]
		public System.Nullable<int> Punten
		{
			get
			{
				return this._Punten;
			}
			set
			{
				if ((this._Punten != value))
				{
					this.OnPuntenChanging(value);
					this.SendPropertyChanging();
					this._Punten = value;
					this.SendPropertyChanged("Punten");
					this.OnPuntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ready", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Ready
		{
			get
			{
				return this._Ready;
			}
			set
			{
				if ((this._Ready != value))
				{
					this.OnReadyChanging(value);
					this.SendPropertyChanging();
					this._Ready = value;
					this.SendPropertyChanged("Ready");
					this.OnReadyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
